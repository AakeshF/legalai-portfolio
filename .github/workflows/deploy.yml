name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and push backend
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: |
          ghcr.io/aakeshf/legalai-portfolio-backend:latest
          ghcr.io/aakeshf/legalai-portfolio-backend:${{ github.sha }}
        cache-from: type=registry,ref=ghcr.io/aakeshf/legalai-portfolio-backend:buildcache
        cache-to: type=registry,ref=ghcr.io/aakeshf/legalai-portfolio-backend:buildcache,mode=max
    
    - name: Build and push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: |
          ghcr.io/aakeshf/legalai-portfolio-frontend:latest
          ghcr.io/aakeshf/legalai-portfolio-frontend:${{ github.sha }}
        cache-from: type=registry,ref=ghcr.io/aakeshf/legalai-portfolio-frontend:buildcache
        cache-to: type=registry,ref=ghcr.io/aakeshf/legalai-portfolio-frontend:buildcache,mode=max
    
    - name: Deploy to production
      if: false  # Enable when server details are available
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USER }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          cd /opt/legalai
          docker-compose pull
          docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
          docker-compose exec -T backend python migrate_db.py
          docker system prune -f